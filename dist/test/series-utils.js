'use strict';

var _tape = require('tape');

var _tape2 = _interopRequireDefault(_tape);

require('babel-polyfill');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _seriesUtils = require('../lib/utils/series-utils');

var _ = require('../');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _tape2.default)('series-utils/isSeriesChild', function t(assert) {
  var series = _react2.default.createElement(_.LineSeries, { data: [] });
  assert.ok((0, _seriesUtils.isSeriesChild)(series), 'Should return true for series');
  var axis = _react2.default.createElement(_.XAxis, {
    xRange: [0, 1],
    xDomain: [0, 1],
    xType: 'linear'
  });
  assert.notOk((0, _seriesUtils.isSeriesChild)(axis), 'Should return false for non-series');
  assert.end();
}); // Copyright (c) 2016 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

function arePropsValid(seriesProps) {
  return typeof seriesProps._colorValue !== 'undefined' && typeof seriesProps._opacityValue !== 'undefined' && typeof seriesProps.ref === 'string' && typeof seriesProps.sameTypeIndex === 'number' && typeof seriesProps.sameTypeTotal === 'number' && typeof seriesProps.seriesIndex === 'number';
}

(0, _tape2.default)('series-utils/collectSeriesTypesInfo', function t(assert) {
  var result = (0, _seriesUtils.getSeriesPropsFromChildren)([_react2.default.createElement(_.LineSeries, { data: [] }), _react2.default.createElement(_.LineSeries, { data: [] })]);
  assert.ok(result.length === 2, 'Returns array of proper size');
  result.forEach(function (props, i) {
    assert.ok(arePropsValid(props), 'Props #' + i + ' are valid');
  });
  assert.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0L3Nlcmllcy11dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQW9CQTs7OztBQUNBOztBQUVBOzs7O0FBRUE7O0FBSUE7Ozs7QUFFQSxvQkFBSyw0QkFBTCxFQUFtQyxTQUFTLENBQVQsQ0FBVyxNQUFYLEVBQW1CO0FBQ3BELE1BQU0sU0FBUyxnQkFBTSxhQUFOLGVBQWdDLEVBQUMsTUFBTSxFQUFQLEVBQWhDLENBQWY7QUFDQSxTQUFPLEVBQVAsQ0FBVSxnQ0FBYyxNQUFkLENBQVYsRUFBaUMsK0JBQWpDO0FBQ0EsTUFBTSxPQUFPLGdCQUFNLGFBQU4sVUFBMkI7QUFDdEMsWUFBUSxDQUFDLENBQUQsRUFBSSxDQUFKLENBRDhCO0FBRXRDLGFBQVMsQ0FBQyxDQUFELEVBQUksQ0FBSixDQUY2QjtBQUd0QyxXQUFPO0FBSCtCLEdBQTNCLENBQWI7QUFLQSxTQUFPLEtBQVAsQ0FBYSxnQ0FBYyxJQUFkLENBQWIsRUFBa0Msb0NBQWxDO0FBQ0EsU0FBTyxHQUFQO0FBQ0QsQ0FWRCxFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVlBLFNBQVMsYUFBVCxDQUF1QixXQUF2QixFQUFvQztBQUNsQyxTQUFPLE9BQU8sWUFBWSxXQUFuQixLQUFtQyxXQUFuQyxJQUNMLE9BQU8sWUFBWSxhQUFuQixLQUFxQyxXQURoQyxJQUVMLE9BQU8sWUFBWSxHQUFuQixLQUEyQixRQUZ0QixJQUdMLE9BQU8sWUFBWSxhQUFuQixLQUFxQyxRQUhoQyxJQUlMLE9BQU8sWUFBWSxhQUFuQixLQUFxQyxRQUpoQyxJQUtMLE9BQU8sWUFBWSxXQUFuQixLQUFtQyxRQUxyQztBQU1EOztBQUVELG9CQUFLLHFDQUFMLEVBQTRDLFNBQVMsQ0FBVCxDQUFXLE1BQVgsRUFBbUI7QUFDN0QsTUFBTSxTQUFTLDZDQUEyQixDQUN4QyxnQkFBTSxhQUFOLGVBQWdDLEVBQUMsTUFBTSxFQUFQLEVBQWhDLENBRHdDLEVBRXhDLGdCQUFNLGFBQU4sZUFBZ0MsRUFBQyxNQUFNLEVBQVAsRUFBaEMsQ0FGd0MsQ0FBM0IsQ0FBZjtBQUlBLFNBQU8sRUFBUCxDQUFVLE9BQU8sTUFBUCxLQUFrQixDQUE1QixFQUErQiw4QkFBL0I7QUFDQSxTQUFPLE9BQVAsQ0FBZSxVQUFDLEtBQUQsRUFBUSxDQUFSLEVBQWM7QUFDM0IsV0FBTyxFQUFQLENBQVUsY0FBYyxLQUFkLENBQVYsY0FBMEMsQ0FBMUM7QUFDRCxHQUZEO0FBR0EsU0FBTyxHQUFQO0FBQ0QsQ0FWRCIsImZpbGUiOiJzZXJpZXMtdXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTYgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgdGVzdCBmcm9tICd0YXBlJztcbmltcG9ydCAnYmFiZWwtcG9seWZpbGwnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge1xuICBpc1Nlcmllc0NoaWxkLFxuICBnZXRTZXJpZXNQcm9wc0Zyb21DaGlsZHJlbn0gZnJvbSAnLi4vbGliL3V0aWxzL3Nlcmllcy11dGlscyc7XG5cbmltcG9ydCB7TGluZVNlcmllcywgWEF4aXN9IGZyb20gJy4uLyc7XG5cbnRlc3QoJ3Nlcmllcy11dGlscy9pc1Nlcmllc0NoaWxkJywgZnVuY3Rpb24gdChhc3NlcnQpIHtcbiAgY29uc3Qgc2VyaWVzID0gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5lU2VyaWVzLCB7ZGF0YTogW119KTtcbiAgYXNzZXJ0Lm9rKGlzU2VyaWVzQ2hpbGQoc2VyaWVzKSwgJ1Nob3VsZCByZXR1cm4gdHJ1ZSBmb3Igc2VyaWVzJyk7XG4gIGNvbnN0IGF4aXMgPSBSZWFjdC5jcmVhdGVFbGVtZW50KFhBeGlzLCB7XG4gICAgeFJhbmdlOiBbMCwgMV0sXG4gICAgeERvbWFpbjogWzAsIDFdLFxuICAgIHhUeXBlOiAnbGluZWFyJ1xuICB9KTtcbiAgYXNzZXJ0Lm5vdE9rKGlzU2VyaWVzQ2hpbGQoYXhpcyksICdTaG91bGQgcmV0dXJuIGZhbHNlIGZvciBub24tc2VyaWVzJyk7XG4gIGFzc2VydC5lbmQoKTtcbn0pO1xuXG5mdW5jdGlvbiBhcmVQcm9wc1ZhbGlkKHNlcmllc1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2Ygc2VyaWVzUHJvcHMuX2NvbG9yVmFsdWUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIHNlcmllc1Byb3BzLl9vcGFjaXR5VmFsdWUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIHNlcmllc1Byb3BzLnJlZiA9PT0gJ3N0cmluZycgJiZcbiAgICB0eXBlb2Ygc2VyaWVzUHJvcHMuc2FtZVR5cGVJbmRleCA9PT0gJ251bWJlcicgJiZcbiAgICB0eXBlb2Ygc2VyaWVzUHJvcHMuc2FtZVR5cGVUb3RhbCA9PT0gJ251bWJlcicgJiZcbiAgICB0eXBlb2Ygc2VyaWVzUHJvcHMuc2VyaWVzSW5kZXggPT09ICdudW1iZXInO1xufVxuXG50ZXN0KCdzZXJpZXMtdXRpbHMvY29sbGVjdFNlcmllc1R5cGVzSW5mbycsIGZ1bmN0aW9uIHQoYXNzZXJ0KSB7XG4gIGNvbnN0IHJlc3VsdCA9IGdldFNlcmllc1Byb3BzRnJvbUNoaWxkcmVuKFtcbiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmVTZXJpZXMsIHtkYXRhOiBbXX0pLFxuICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluZVNlcmllcywge2RhdGE6IFtdfSlcbiAgXSk7XG4gIGFzc2VydC5vayhyZXN1bHQubGVuZ3RoID09PSAyLCAnUmV0dXJucyBhcnJheSBvZiBwcm9wZXIgc2l6ZScpO1xuICByZXN1bHQuZm9yRWFjaCgocHJvcHMsIGkpID0+IHtcbiAgICBhc3NlcnQub2soYXJlUHJvcHNWYWxpZChwcm9wcyksIGBQcm9wcyAjJHtpfSBhcmUgdmFsaWRgKTtcbiAgfSk7XG4gIGFzc2VydC5lbmQoKTtcbn0pO1xuIl19